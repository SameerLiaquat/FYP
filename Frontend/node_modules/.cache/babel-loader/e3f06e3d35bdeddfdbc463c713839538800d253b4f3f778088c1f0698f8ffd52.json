{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\GitHub\\\\FYP-2023-2024\\\\Frontend\\\\src\\\\components\\\\HadithQueryResults\\\\HadithQueryResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './HadithQueryResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HadithQueryResults = () => {\n  _s();\n  const location = useLocation();\n  const {\n    resultsData\n  } = location.state;\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [sortOrder, setSortOrder] = useState('asc'); // Initial sort order\n  const [sortedColumn, setSortedColumn] = useState('HadithNo'); // Initial sorted column\n\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Function to handle sorting\n  const handleSort = column => {\n    let sortedData = [...resultsData[column]]; // Copy of the column data\n\n    if (sortedColumn === column) {\n      // If same column clicked, reverse sort order\n      sortedData.reverse();\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      // If different column clicked, set to ascending order\n      sortedData.sort((a, b) => a - b);\n      setSortOrder('asc');\n      setSortedColumn(column);\n    }\n    return sortedData;\n  };\n  const sortedHadithNo = handleSort('HadithNo');\n  const sortedTheme = handleSort('Theme');\n  const sortedText = handleSort('Text');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `hadith-query-results ${isExpanded ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-button-HQR\",\n      onClick: () => window.history.back(),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../../assets/back_button.png'),\n        alt: \"Back Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `query-text-box ${isExpanded ? 'expanded' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-swipe-bar\",\n        onClick: toggleExpand,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `arrow ${isExpanded ? 'expanded' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isExpanded && resultsData && resultsData.HadithNo && resultsData.Theme && resultsData.Text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: `sortable ${sortedColumn === 'HadithNo' ? 'sorted' : ''}`,\n              onClick: () => handleSort('HadithNo') // Update the state when sorting\n              ,\n              children: [\"Hadith Number \", sortedColumn === 'HadithNo' && sortOrder === 'asc' ? '▲' : '▼']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: `sortable ${sortedColumn === 'Theme' ? 'sorted' : ''}`,\n              onClick: () => handleSort('Theme') // Update the state when sorting\n              ,\n              children: [\"Theme \", sortedColumn === 'Theme' && sortOrder === 'asc' ? '▲' : '▼']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: `sortable ${sortedColumn === 'Text' ? 'sorted' : ''}`,\n              onClick: () => handleSort('Text') // Update the state when sorting\n              ,\n              children: [\"Text \", sortedColumn === 'Text' && sortOrder === 'asc' ? '▲' : '▼']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), sortedHadithNo.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sortedTheme[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-cell\",\n              children: sortedText[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(HadithQueryResults, \"BD+UFlP6uonp2nKD3Xf8sK3/hKY=\", false, function () {\n  return [useLocation];\n});\n_c = HadithQueryResults;\nexport default HadithQueryResults;\nvar _c;\n$RefreshReg$(_c, \"HadithQueryResults\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","HadithQueryResults","_s","location","resultsData","state","isExpanded","setIsExpanded","sortOrder","setSortOrder","sortedColumn","setSortedColumn","toggleExpand","handleSort","column","sortedData","reverse","sort","a","b","sortedHadithNo","sortedTheme","sortedText","className","children","onClick","window","history","back","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","HadithNo","Theme","Text","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Documents/GitHub/FYP-2023-2024/Frontend/src/components/HadithQueryResults/HadithQueryResults.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './HadithQueryResults.css';\r\n\r\nconst HadithQueryResults = () => {\r\n  const location = useLocation();\r\n  const { resultsData } = location.state;\r\n\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [sortOrder, setSortOrder] = useState('asc'); // Initial sort order\r\n  const [sortedColumn, setSortedColumn] = useState('HadithNo'); // Initial sorted column\r\n\r\n  const toggleExpand = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  // Function to handle sorting\r\n  const handleSort = (column) => {\r\n    let sortedData = [...resultsData[column]]; // Copy of the column data\r\n\r\n    if (sortedColumn === column) {\r\n      // If same column clicked, reverse sort order\r\n      sortedData.reverse();\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      // If different column clicked, set to ascending order\r\n      sortedData.sort((a, b) => a - b);\r\n      setSortOrder('asc');\r\n      setSortedColumn(column);\r\n    }\r\n\r\n    return sortedData;\r\n  };\r\n\r\n  const sortedHadithNo = handleSort('HadithNo');\r\n  const sortedTheme = handleSort('Theme');\r\n  const sortedText = handleSort('Text');\r\n\r\n  return (\r\n    <div className={`hadith-query-results ${isExpanded ? 'expanded' : ''}`}>\r\n      <div className=\"back-button-HQR\" onClick={() => window.history.back()}>\r\n        <img src={require('../../assets/back_button.png')} alt=\"Back Button\" />\r\n      </div>\r\n      <div className={`query-text-box ${isExpanded ? 'expanded' : ''}`}>\r\n        <div className=\"details-swipe-bar\" onClick={toggleExpand}>\r\n          <div className={`arrow ${isExpanded ? 'expanded' : ''}`}></div>\r\n        </div>\r\n      </div>\r\n\r\n      {isExpanded && resultsData && resultsData.HadithNo && resultsData.Theme && resultsData.Text && (\r\n        <div className=\"details-table\">\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th\r\n                  className={`sortable ${sortedColumn === 'HadithNo' ? 'sorted' : ''}`}\r\n                  onClick={() => handleSort('HadithNo')} // Update the state when sorting\r\n                >\r\n                  Hadith Number {sortedColumn === 'HadithNo' && sortOrder === 'asc' ? '▲' : '▼'}\r\n                </th>\r\n                <th\r\n                  className={`sortable ${sortedColumn === 'Theme' ? 'sorted' : ''}`}\r\n                  onClick={() => handleSort('Theme')} // Update the state when sorting\r\n                >\r\n                  Theme {sortedColumn === 'Theme' && sortOrder === 'asc' ? '▲' : '▼'}\r\n                </th>\r\n                <th\r\n                  className={`sortable ${sortedColumn === 'Text' ? 'sorted' : ''}`}\r\n                  onClick={() => handleSort('Text')} // Update the state when sorting\r\n                >\r\n                  Text {sortedColumn === 'Text' && sortOrder === 'asc' ? '▲' : '▼'}\r\n                </th>\r\n              </tr>\r\n              {sortedHadithNo.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item}</td>\r\n                  <td>{sortedTheme[index]}</td>\r\n                  <td className=\"text-cell\">{sortedText[index]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HadithQueryResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}