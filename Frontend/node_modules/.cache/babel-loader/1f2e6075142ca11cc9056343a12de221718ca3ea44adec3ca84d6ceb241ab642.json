{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\GitHub\\\\FYP-2023-2024\\\\Frontend\\\\src\\\\components\\\\VerseQueryBuilder\\\\VerseQueryBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\nimport './VerseQueryBuilder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeOptions = [{\n  value: 'lugha',\n  label: 'lugha'\n}, {\n  value: 'kalam',\n  label: 'kalam'\n}, {\n  value: 'science',\n  label: 'science'\n}];\nconst ayatNumberOptions = [{\n  value: '15',\n  label: 'Verse 015'\n}, {\n  value: '6',\n  label: 'Verse 006'\n}, {\n  value: '13',\n  label: 'Verse 013'\n}];\nconst surahNumberOptions = [{\n  value: '12',\n  label: 'يوسف 12'\n}, {\n  value: '10',\n  label: 'يونس 10'\n}, {\n  value: '19',\n  label: 'مريم 19'\n}];\nconst narratorTitleOptions = [{\n  value: 'sahabi',\n  label: 'sahabi'\n}, {\n  value: 'rawi',\n  label: 'rawi'\n}, {\n  value: 'any',\n  label: 'any'\n}];\nconst narratorNameOptions = [{\n  value: 'ابن عباس',\n  label: 'ابن عباس'\n}, {\n  value: 'عثمان بن سعيد',\n  label: 'عثمان بن سعيد'\n}, {\n  value: 'أبو روق',\n  label: 'أبو روق'\n}];\nconst organizationOptions = [{\n  value: 'org1',\n  label: 'Organization 1'\n}, {\n  value: 'org2',\n  label: 'Organization 2'\n}];\nconst timeOptions = [{\n  value: 'time1',\n  label: 'Time 1'\n}, {\n  value: 'time2',\n  label: 'Time 2'\n}];\nconst placeOptions = [{\n  value: 'place1',\n  label: 'Place 1'\n}, {\n  value: 'place2',\n  label: 'Place 2'\n}];\nconst VerseQueryBuilder = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedOption, setSelectedOption] = useState('verse');\n  const [data, setData] = useState({\n    theme: '',\n    surah_number: '',\n    verse_number: '',\n    narrators: [{\n      title: '',\n      name: ''\n    }],\n    organization: '',\n    time: '',\n    place: ''\n  });\n  const handleRadioChange = option => {\n    setSelectedOption(option);\n  };\n  const handleThemeChange = selectedOption => {\n    setData({\n      ...data,\n      theme: selectedOption.value\n    });\n  };\n  const handleSurahNumberChange = selectedOption => {\n    setData({\n      ...data,\n      surah_number: selectedOption.value\n    });\n  };\n  const handleAyatNumberChange = selectedOption => {\n    setData({\n      ...data,\n      verse_number: selectedOption.value\n    });\n  };\n  const handleAddNarrator = () => {\n    setData(prevData => ({\n      ...prevData,\n      narrators: [...prevData.narrators, {\n        title: '',\n        name: ''\n      }]\n    }));\n  };\n  const handleRemoveNarrator = index => {\n    const updatedNarrators = [...data.narrators];\n    updatedNarrators.splice(index, 1);\n    setData({\n      ...data,\n      narrators: updatedNarrators\n    });\n  };\n  const handleOrganizationChange = selectedOption => {\n    setData({\n      ...data,\n      organization: selectedOption.value\n    });\n  };\n  const handleTimeChange = selectedOption => {\n    setData({\n      ...data,\n      time: selectedOption.value\n    });\n  };\n  const handlePlaceChange = selectedOption => {\n    setData({\n      ...data,\n      place: selectedOption.value\n    });\n  };\n  const SendDataToBackend = () => {\n    // Implement sending data to the backend\n\n    let url = `http://127.0.0.1:8000/api/query_verse/?theme=${data.theme}`;\n    if (data.surah_number) {\n      url += `&surah_number=${data.surah_number}`;\n    }\n    if (data.verse_number) {\n      url += `&verse_number=${data.verse_number}`;\n    }\n\n    // Add conditions for organization, time, and place if needed\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      if (data.result) {\n        console.log('Result from backend:', data.result);\n        navigate('/verse-query-results', {\n          state: {\n            resultsData: data.result\n          }\n        });\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  // ... Implement limitValue state and handlers for incrementing and decrementing the limit\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verse-query-builder\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(VerseQueryBuilder, \"JT2PTajBFoqE+anKE855/idBjUQ=\", false, function () {\n  return [useNavigate];\n});\n_c = VerseQueryBuilder;\nexport default VerseQueryBuilder;\nvar _c;\n$RefreshReg$(_c, \"VerseQueryBuilder\");","map":{"version":3,"names":["React","useState","useNavigate","Select","jsxDEV","_jsxDEV","themeOptions","value","label","ayatNumberOptions","surahNumberOptions","narratorTitleOptions","narratorNameOptions","organizationOptions","timeOptions","placeOptions","VerseQueryBuilder","_s","navigate","selectedOption","setSelectedOption","data","setData","theme","surah_number","verse_number","narrators","title","name","organization","time","place","handleRadioChange","option","handleThemeChange","handleSurahNumberChange","handleAyatNumberChange","handleAddNarrator","prevData","handleRemoveNarrator","index","updatedNarrators","splice","handleOrganizationChange","handleTimeChange","handlePlaceChange","SendDataToBackend","url","fetch","method","headers","then","response","json","console","log","result","state","resultsData","catch","error","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Documents/GitHub/FYP-2023-2024/Frontend/src/components/VerseQueryBuilder/VerseQueryBuilder.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport './VerseQueryBuilder.css';\r\n\r\nconst themeOptions = [\r\n  { value: 'lugha', label: 'lugha' },\r\n  { value: 'kalam', label: 'kalam' },\r\n  { value: 'science', label: 'science' },\r\n];\r\n\r\nconst ayatNumberOptions = [\r\n  { value: '15', label: 'Verse 015' },\r\n  { value: '6', label: 'Verse 006' },\r\n  { value: '13', label: 'Verse 013' },\r\n];\r\n\r\nconst surahNumberOptions = [\r\n  { value: '12', label: 'يوسف 12' },\r\n  { value: '10', label: 'يونس 10' },\r\n  { value: '19', label: 'مريم 19' },\r\n];\r\n\r\nconst narratorTitleOptions = [\r\n  { value: 'sahabi', label: 'sahabi' },\r\n  { value: 'rawi', label: 'rawi' },\r\n  { value: 'any', label: 'any' },\r\n];\r\n\r\nconst narratorNameOptions = [\r\n  { value: 'ابن عباس', label: 'ابن عباس' },\r\n  { value: 'عثمان بن سعيد', label: 'عثمان بن سعيد' },\r\n  { value: 'أبو روق', label: 'أبو روق' },\r\n];\r\n\r\nconst organizationOptions = [\r\n  { value: 'org1', label: 'Organization 1' },\r\n  { value: 'org2', label: 'Organization 2' },\r\n];\r\n\r\nconst timeOptions = [\r\n  { value: 'time1', label: 'Time 1' },\r\n  { value: 'time2', label: 'Time 2' },\r\n];\r\n\r\nconst placeOptions = [\r\n  { value: 'place1', label: 'Place 1' },\r\n  { value: 'place2', label: 'Place 2' },\r\n];\r\n\r\nconst VerseQueryBuilder = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedOption, setSelectedOption] = useState('verse');\r\n  const [data, setData] = useState({\r\n    theme: '',\r\n    surah_number: '',\r\n    verse_number: '',\r\n    narrators: [{ title: '', name: '' }],\r\n    organization: '',\r\n    time: '',\r\n    place: '',\r\n  });\r\n\r\n  const handleRadioChange = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleThemeChange = (selectedOption) => {\r\n    setData({\r\n      ...data,\r\n      theme: selectedOption.value,\r\n    });\r\n  };\r\n\r\n  const handleSurahNumberChange = (selectedOption) => {\r\n    setData({\r\n      ...data,\r\n      surah_number: selectedOption.value,\r\n    });\r\n  };\r\n\r\n  const handleAyatNumberChange = (selectedOption) => {\r\n    setData({\r\n      ...data,\r\n      verse_number: selectedOption.value,\r\n    });\r\n  };\r\n\r\n  const handleAddNarrator = () => {\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      narrators: [...prevData.narrators, { title: '', name: '' }],\r\n    }));\r\n  };\r\n\r\n  const handleRemoveNarrator = (index) => {\r\n    const updatedNarrators = [...data.narrators];\r\n    updatedNarrators.splice(index, 1);\r\n    setData({\r\n      ...data,\r\n      narrators: updatedNarrators,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationChange = (selectedOption) => {\r\n    setData({\r\n      ...data,\r\n      organization: selectedOption.value,\r\n    });\r\n  };\r\n\r\n  const handleTimeChange = (selectedOption) => {\r\n    setData({\r\n      ...data,\r\n      time: selectedOption.value,\r\n    });\r\n  };\r\n\r\n  const handlePlaceChange = (selectedOption) => {\r\n    setData({\r\n      ...data,\r\n      place: selectedOption.value,\r\n    });\r\n  };\r\n\r\n  const SendDataToBackend = () => {\r\n    // Implement sending data to the backend\r\n\r\n    let url = `http://127.0.0.1:8000/api/query_verse/?theme=${data.theme}`;\r\n\r\n    if (data.surah_number) {\r\n      url += `&surah_number=${data.surah_number}`;\r\n    }\r\n\r\n    if (data.verse_number) {\r\n      url += `&verse_number=${data.verse_number}`;\r\n    }\r\n\r\n    // Add conditions for organization, time, and place if needed\r\n\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        if (data.result) {\r\n          console.log('Result from backend:', data.result);\r\n          navigate('/verse-query-results', { state: { resultsData: data.result } });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  // ... Implement limitValue state and handlers for incrementing and decrementing the limit\r\n\r\n  return (\r\n    <div className=\"verse-query-builder\">\r\n      {/* JSX structure similar to HadithQueryBuilder */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerseQueryBuilder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}